@model EAVWebApplication.Models.Data.ViewModelAttributeValue


<div class="eav-value-container">

    @Html.HiddenFor(m => m.AttributeID)
    @Html.HiddenFor(m => m.Sequence)
    @Html.HiddenFor(m => m.IsKey)
    @Html.HiddenFor(m => m.ObjectState)

    @Html.HiddenFor(m => m.DisplayText)
    <label class="eav-value-caption">@Model.DisplayText</label>

    @Html.HiddenFor(m => m.DataType)
    @switch (Model.DataType)
    {
        case EAV.EAVDataType.Boolean:
            @Html.DropDownListFor(m => m.Value, EAVWebApplication.Models.Data.ViewModelAttributeValue.YesNoList.Select(it => new SelectListItem() { Text = it.Text, Value = it.Value.ToString() }), "", new { @class = "eav-value-control" })
            break;
        case EAV.EAVDataType.DateTime:
        case EAV.EAVDataType.Float:
        case EAV.EAVDataType.Integer:
        case EAV.EAVDataType.String:
        default:
            @Html.TextBoxFor(m => m.Value, new { @class = "" })
            break;
    }

    @Html.HiddenFor(m => m.VariableUnits)
    @if (Model.VariableUnits.HasValue)
    {
        if (Model.VariableUnits.Value)
        {
            @Html.HiddenFor(m => m.UnitID)

            if (Model.ObjectState == EAV.Model.ObjectState.New)
            {
                @Html.TextBoxFor(m => m.UnitText, new { @class = "eav-value-control", placeholder = "units" })
            }
            else
            {
                @Html.HiddenFor(m => m.UnitText)
                <label class="eav-units-text">@Model.UnitText</label>
            }
        }
        else if (Model.Units.Count > 1)
        {
            @Html.HiddenFor(m => m.UnitText)
            @Html.DropDownListFor(m => m.UnitID, Model.Units.Select(it => new SelectListItem() { Text = it.DisplayText, Value = it.UnitID.ToString() }), "", new { @class = "eav-value-control" })
        }
        else
        {
            @Html.HiddenFor(m => m.UnitID)
            @Html.HiddenFor(m => m.UnitText)
            <label class="eav-units-text">@Model.UnitText</label>
        }
    }
    else
    {
        @Html.HiddenFor(m => m.UnitText)
        @Html.HiddenFor(m => m.UnitID)
    }
</div>

