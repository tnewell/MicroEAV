@model EAVWebApplication.Models.Data.DataModel

<style type="text/css">
    .field-validation-error
    {
        color: red;
    }

    .input-validation-error
    {
        border-color: #FF8080;
        box-shadow: 0px 0px 6px 2px rgba(255,204,204,0.60), inset 0px 0px 1px 1px rgba(0,0,0,0.075);
    }

    .glyphicon-pencil
    {
        color: darkgoldenrod;
    }

    .glyphicon-plus
    {
        color: blue;
    }

    .glyphicon-ok
    {
        color: forestgreen;
    }

    .glyphicon-remove
    {
        color: red;
    }

    .glyphicon-key
    {
        color: goldenrod;
    }

    .glyphicon-repeat
    {
        color: red;
    }

    .glyphicon-trash
    {
        color: dimgray;
    }
</style>


@section scripts
{
    <script>

        $.fn.bootstrapBtn = $.fn.button.noConflict();

        // Necessary to keep calls from caching response
        $.ajaxSetup(
        {
            cache: false,
        });

        function getRootContainers()
        {
            var ctlContainerList = $('#ctlContainerList');

            ctlContainerList.empty();
            ctlContainerList.prop('disabled', true);

            var contextID = $('#ctlContextList').val();

            if (contextID)
            {
                $.ajax(
                {
                    url: '@Url.Action("GetRootContainers")',
                    type: 'GET',
                    data: { contextID: contextID },
                    cache: false,
                    dataType: "json",
                    success: function (response, status, request)
                    {
                        console.log('Connection to server made. Status: \'' + status + '\'.');

                        ctlContainerList.append($('<option></option>').attr('value', 0).text(response.length > 0 ? '<Select Container>' : ''));

                        $.each(response, function (ix, it)
                        {
                            ctlContainerList.append($('<option></option>').attr('value', it.Value).text(it.Text));
                        });

                        ctlContainerList.prop('disabled', ctlContainerList[0].children.length < 2);
                    },
                    error: function (request, status, err)
                    {
                        debugger;

                        console.log('Connection to server not made. Status: \'' + status + '\'\r\nReported error: \'' + err + '\'\r\n\r\n')
                        console.log(request + '\r\n')

                        alert('[ERROR] Status: \'' + status + '\' - Error: ' + err + '.\r\n\r\n' + request);
                    },
                    complete: function (request, status)
                    {
                    },
                });
            }
        }

    </script>
}

@{
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@using (Html.BeginForm("EditForm", "Data", FormMethod.Post, new { id = "ctlSelectorForm" }))
{
    <div class="row" style="margin-top: 25px; margin-bottom: 20px; padding: 10px 3px 10px 3px; border: solid 1px #000033; border-radius: 3px; background-color: #d0e9eb; ">

        <div class="col-md-2 col-lg-2">
            @Html.DropDownListFor(m => m.SelectedContextID, Model.Contexts.OrderBy(it => it.Name).Select(it => new SelectListItem() { Text = it.Name, Value = it.ContextID.GetValueOrDefault().ToString() }), "<Select Context>", new { id = "ctlContextList", @class = "form-control", onchange = "getRootContainers();" })
        </div>

        <div class="col-md-2 col-lg-2">
            @Html.DropDownListFor(m => m.SelectedContainerID, Enumerable.Empty<SelectListItem>(), new { id = "ctlContainerList", @class = "form-control", disabled = "disabled" })
        </div>

    </div>

    <input type="submit" class="btn" value="Edit" />
}


