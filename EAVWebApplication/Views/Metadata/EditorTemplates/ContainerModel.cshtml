@model ContainerModel

@{ 
    var editActionUrl = (Model.ParentID != 0 ? "~/Metadata/EditChildContainer" : "~/Metadata/EditRootContainer") + "?id=" + Model.ID.ToString();
    var deleteActionUrl = (Model.ParentID != 0 ? "~/Metadata/DeleteChildContainer" : "~/Metadata/DeleteRootContainer") + "?id=" + Model.ID.ToString();
}

<div>
    @Html.HiddenFor(m => m.Sequence)
    <label>@(Model.Sequence).</label>
    <span>
        <sup>
            @if (Model.IsRepeating)
            { <span class="glyphicon glyphicon-repeat"></span> }
            else
            { <span class="glyphicon">&nbsp;</span> }
        </sup>
        <label>@Html.DisplayFor(m => m.DisplayText)</label> ( @Html.DisplayFor(m => m.Name) )
    </span>
    <span>
        <button type="button" class="btn btn-sm" onclick="dialogAction('@Url.Content(editActionUrl)');"><span class="glyphicon glyphicon-pencil"></span> Edit</button>
    </span>
    <span>
        <button type="button" class="btn btn-sm" onclick="dialogAction('@Url.Content(deleteActionUrl)');"><span class="glyphicon glyphicon-trash"></span> Delete</button>
    </span>
    @Html.HiddenFor(m => m.ID)
    @Html.HiddenFor(m => m.ParentID)
    @Html.HiddenFor(m => m.Name)
    @Html.HiddenFor(m => m.DataName)
    @Html.HiddenFor(m => m.DisplayText)
    @Html.HiddenFor(m => m.IsRepeating)
    @Html.HiddenFor(m => m.Existing)
</div>
