@model EAVWebApplication.Models.Metadata.ContainerViewModel

<script>

    $(function ()
    {
        $('#AttributeList').sortable(
        {
            axis: "y",
            update: function (ev, ui)
            {
                var sequences = [];

                $.each(this.children, function (ix, it)
                {
                    sequences.push($(this).children('input').first().val());
                });

                sequences = sequences.sort(function (a, b) { return (a - b); });

                $.each(this.children, function (ix, it)
                {
                    $(this).children('input').first().val(sequences[ix]);
                    $(this).children('label').first().text(sequences[ix]);
                });
            },
        });

        $('#AttributeList').disableSelection();

        $('#ContainerList').sortable(
        {
            axis: "y",
            update: function (ev, ui)
            {
                var sequences = [];

                $.each(this.children, function (ix, it)
                {
                    sequences.push($(this).children('input').first().val());
                });

                sequences = sequences.sort(function (a, b) { return (a - b); });

                $.each(this.children, function (ix, it)
                {
                    $(this).children('input').first().val(sequences[ix]);
                    $(this).children('label').first().text(sequences[ix] + ".");
                });
            },
        });

        $('#ContainerList').disableSelection();
    });

</script>

@Html.HiddenFor(m => m.ID)
@Html.HiddenFor(m => m.ParentID)
@Html.HiddenFor(m => m.Sequence)
@Html.HiddenFor(m => m.Existing)

<input type="hidden" id="HasChildContainers" value="@Model.ChildContainers.Any()" />
<input type="hidden" id="HasAttributes" value="@Model.Attributes.Any()" />

<div class="form-group">
    @Html.LabelFor(m => m.Name, new { @class = "form-label" })
    @Html.ValidationMessageFor(m => m.Name)
    @Html.EditorFor(m => m.Name, new { htmlAttributes = new { @class = "form-control" } })
</div>

<div class="form-group">
    @Html.LabelFor(m => m.DataName, new { @class = "form-label" })
    @Html.ValidationMessageFor(m => m.DataName)
    @Html.EditorFor(m => m.DataName, new { htmlAttributes = new { @class = "form-control" } })
</div>

<div class="form-group">
    @Html.LabelFor(m => m.DisplayText, new { @class = "form-label" })
    @Html.EditorFor(m => m.DisplayText, new { htmlAttributes = new { @class = "form-control" } })
</div>

<div class="form-group">
    <label>
        @Html.EditorFor(m => m.IsRepeating) <span style="font-weight: bold;">Repeating</span>
    </label>
</div>

@if (Model.Attributes.Any())
{
    <hr />
    <div id="AttributeList">
        @Html.EditorFor(m => m.Attributes)
    </div>
}

<button type="button" class="btn btn-sm" id="ctlAddAttribute" onclick="dialogAction('@Url.Content("~/Metadata/AddAttribute")'); $('#ctlDialogContainer').dialog('close');"><span class="glyphicon glyphicon-plus"></span> Add Attribute</button>

@if (Model.ChildContainers.Any())
{
    <hr />
    <div id="ContainerList">
        @Html.EditorFor(m => m.ChildContainers)
    </div>
}

<button type="button" class="btn btn-sm" id="ctlAddContainer" onclick="dialogAction('@Url.Content("~/Metadata/AddChildContainer")'); $('#ctlDialogContainer').dialog('close');"><span class="glyphicon glyphicon-plus"></span> Add Container</button>

