@model ContextModel

@Html.HiddenFor(m => m.ID)
@Html.HiddenFor(m => m.Existing)

<div class="form-group">
    @Html.LabelFor(m => m.Name, new { @class = "form-label" })
    @Html.ValidationMessageFor(m => m.Name)
    @Html.EditorFor(m => m.Name, new { htmlAttributes = new { @class = "form-control" } })
</div>

<div class="form-group">
    @Html.LabelFor(m => m.DataName, new { @class = "form-label" } )
    @Html.ValidationMessageFor(m => m.DataName)
    @Html.EditorFor(m => m.DataName, new { htmlAttributes = new { @class = "form-control" } })
</div>

<div class="form-group">
    @Html.LabelFor(m => m.DisplayText, new { @class = "form-label" } )
    @Html.EditorFor(m => m.DisplayText, new { htmlAttributes = new { @class = "form-control" } })
</div>

@if (Model.Containers.Any())
{
    <hr />

    @Html.EditorFor(m => m.Containers)
}

<hr />

<button type="button" class="btn btn-sm" id="ctlAddContainer" onclick="dialogAction('@Url.Content("~/Metadata/AddRootContainer")'); $('#ctlDialogContainer').dialog('close');"><span class="glyphicon glyphicon-plus"></span> Add Root Container</button>
